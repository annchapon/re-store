{"version":3,"sources":["components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","components/app/index.js","components/app/app.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/index.js","store.js","index.js"],"names":["React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","App","console","log","getBooks","ErrorIndicator","ErrorBoundry","state","hasError","this","setState","children","Component","BookstoreService","id","title","author","initialState","books","reducer","action","type","payload","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"wNAEA,EAGIA,IAAMC,gBAFEC,EADZ,EACEC,SACUC,EAFZ,EAEEC,S,OCgBaC,EAhBc,kBAAM,SAACC,GAClC,OAAO,SAACC,GACN,OACE,cAACJ,EAAD,UAEI,SAACK,GACC,OACE,cAACF,EAAD,2BAAaC,GAAb,IAAoBC,iBAAkBA,WCTrCC,G,MCSAJ,KALH,SAAC,GAA0B,IAAxBG,EAAuB,EAAvBA,iBAEb,OADAE,QAAQC,IAAIH,EAAiBI,YACtB,0C,8BCNMC,G,MCEQ,WACrB,OAAO,2CCHMC,E,4MCGbC,MAAQ,CACNC,UAAU,G,uDAGZ,WACEC,KAAKC,SAAS,CACZF,UAAU,M,oBAId,WACE,OAAIC,KAAKF,MAAMC,SACN,cAAC,EAAD,IAGFC,KAAKV,MAAMY,a,GAhBoBC,aCJrBC,E,wFACnB,WACE,MAAO,CACL,CACEC,GAAI,EACJC,MAAO,iCACPC,OAAQ,mBACV,CACEF,GAAI,EACJC,MAAO,cACPC,OAAQ,0B,aCVVC,EAAe,CACnBC,MAAO,IAeMC,EAZC,WAAmC,IAAlCZ,EAAiC,uDAAzBU,EAAcG,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,eACH,MAAO,CACLH,MAAOE,EAAOE,SAGlB,QACE,OAAOf,ICNEgB,EAFDC,YAAYL,GCQpBnB,EAAmB,IAAIa,EAE7BY,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,UACE,cAAC9B,EAAD,CAA0BkC,MAAO3B,EAAjC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKR4B,SAASC,eAAe,W","file":"static/js/main.3b68e307.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst {\r\n  Provider: BookstoreServiceProvider,\r\n  Consumer: BookstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  BookstoreServiceProvider,\r\n  BookstoreServiceConsumer\r\n};","import React from 'react';\r\n\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <BookstoreServiceConsumer>\r\n        {\r\n          (bookstoreService) => {\r\n            return (\r\n              <Wrapped {...props} bookstoreService={bookstoreService} />\r\n            );\r\n          }\r\n        }\r\n      </BookstoreServiceConsumer>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withBookstoreService;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport { withBookstoreService } from '../hoc';\r\n\r\nimport './app.css';\r\n\r\nconst App = ({ bookstoreService }) => {\r\n  console.log(bookstoreService.getBooks());\r\n  return <div>App</div>;\r\n};\r\n\r\nexport default withBookstoreService()(App);","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div>Error!</div>;\r\n};\r\n\r\nexport default ErrorIndicator;","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\n\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}","export default class BookstoreService {\r\n  getBooks() {\r\n    return [\r\n      {\r\n        id: 1,\r\n        title: 'Production-Ready Microservices',\r\n        author: 'Susan J. Fowler' },\r\n      {\r\n        id: 2,\r\n        title: 'Release It!',\r\n        author: 'Michael T. Nygard' }\r\n    ];\r\n  }\r\n}","const initialState = {\r\n  books: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'BOOKS_LOADED': \r\n      return {\r\n        books: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/app';\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport BookstoreService from './services/bookstore-service';\r\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\r\n\r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundry>\r\n      <BookstoreServiceProvider value={bookstoreService}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </BookstoreServiceProvider>\r\n    </ErrorBoundry>\r\n  </Provider>,\r\n  document.getElementById('root'));"],"sourceRoot":""}
{"version":3,"sources":["components/shop-header/index.js","components/shop-header/shop-header.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/index.js","components/shopping-cart-table/shopping-cart-table.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/index.js","store.js","index.js"],"names":["ShopHeader","numItems","total","className","to","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","fetchBooks","dispatch","type","getBooks","then","data","payload","catch","err","compose","funcs","comp","reduceRight","prevResult","f","Spinner","ErrorIndicator","BookList","books","map","id","BookListContainer","this","loading","error","Component","connect","ShoppingCartTable","items","cartItems","orderTotal","onIncrease","console","log","onDecrease","onDelete","item","idx","name","count","HomePage","CartPage","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","initialState","reducer","action","bookId","find","newItem","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"gVAEeA,ECGI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC9B,OACE,yBAAQC,UAAU,kBAAlB,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,qBAAKD,UAAU,iBAAf,uBAEF,cAAC,IAAD,CAAMC,GAAG,QAAT,SACE,sBAAKD,UAAU,gBAAf,UACE,mBAAGA,UAAU,kCACZF,EAFH,YAEsBC,EAFtB,a,gCCVOG,G,MCEM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cACpBC,EAAqCF,EAArCE,MAAOC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,MAAOC,EAAeL,EAAfK,WAE9B,OACE,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKS,IAAKD,EAAYE,IAAI,YAE5B,sBAAKV,UAAU,eAAf,UACE,sBAAMA,UAAU,aAAhB,SAA8BK,IAC9B,qBAAKL,UAAU,cAAf,SAA8BM,IAC9B,sBAAKN,UAAU,aAAf,cAA8BO,KAC9B,wBACEI,QAASP,EACTJ,UAAU,2BAFZ,iC,OCdR,EAGIY,IAAMC,gBAFEC,EADZ,EACEC,SACUC,EAFZ,EAEEC,SCgBaC,EAhBc,kBAAM,SAACC,GAClC,OAAO,SAACC,GACN,OACE,cAACJ,EAAD,UAEI,SAACK,GACC,OACE,cAACF,EAAD,2BAAaC,GAAb,IAAoBC,iBAAkBA,WCgB9CC,EAAa,SAACD,EAAkBE,GAAnB,OAAgC,WACjDA,EApBO,CACLC,KAAM,wBAoBRH,EAAiBI,WACdC,MAAK,SAACC,GAAD,OAAUJ,EA7BX,CACLC,KAAM,sBACNI,QA2BqCD,OACpCE,OAAM,SAACC,GAAD,OAASP,EAjBX,CACLC,KAAM,sBACNI,QAeoCE,SC1BzBC,EALC,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAc,SAACC,GAC7B,OAAOD,EAAME,aACX,SAACC,EAAYC,GAAb,OAAmBA,EAAED,KAAaF,KCAvBI,G,MCEC,WACd,OAAO,+CCHMC,G,MCEQ,WACrB,OAAO,2CCOHC,G,MAAW,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOpC,EAAoB,EAApBA,cACzB,OACE,oBAAIJ,UAAU,YAAd,SAEIwC,EAAMC,KAAI,SAACtC,GACT,OACE,6BACE,cAAC,EAAD,CACEA,KAAMA,EACNC,cAAe,kBAAMA,EAAcD,EAAKuC,QAHnCvC,EAAKuC,WAYpBC,E,uKACJ,WAmBEC,KAAKxB,MAAME,e,oBAGb,WACE,MAAiDsB,KAAKxB,MAA9CoB,EAAR,EAAQA,MAAOK,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,MAAO1C,EAA/B,EAA+BA,cAE/B,OAAIyC,EACK,cAAC,EAAD,IAGLC,EACK,cAAC,EAAD,IAGF,cAAC,EAAD,CAAUN,MAAOA,EAAOpC,cAAeA,Q,GAlClB2C,aC5BjBR,EDqGAR,EACbb,IACA8B,aArCsB,SAAC,GACvB,MAAO,CACLR,MAFqD,EAA9BA,MAGvBK,QAHqD,EAAvBA,QAI9BC,MAJqD,EAAdA,UA4BhB,SAACvB,EAAD,GAAqC,IAAxBF,EAAuB,EAAvBA,iBACtC,MAAO,CACLC,WAAYA,EAAWD,EAAkBE,GACzCnB,cAAe,SAACsC,GAAD,OAAQnB,EN9ElB,CACLC,KAAM,qBACNI,QM4EgDc,SAIrCX,CAGbY,GExGaM,G,MCmFAD,aArBS,SAAC,GACvB,MAAO,CACLE,MAFmD,EAA5BC,UAGvBpD,MAHmD,EAAjBqD,eAOX,WACzB,MAAO,CACLC,WAAY,SAACX,GACXY,QAAQC,IAAR,qBAA0Bb,KAE5Bc,WAAY,SAACd,GACXY,QAAQC,IAAR,qBAA0Bb,KAE5Be,SAAU,SAACf,GACTY,QAAQC,IAAR,mBAAwBb,QAKfM,EAhFW,SAAC,GAAwD,IAAtDE,EAAqD,EAArDA,MAAOnD,EAA8C,EAA9CA,MAAOsD,EAAuC,EAAvCA,WAAYG,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SA+BjE,OACE,sBAAKzD,UAAU,sBAAf,UACE,4CACA,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,mCACA,sCACA,uCACA,uCACA,6CAIJ,gCAEIkD,EAAMT,KA9CE,SAACiB,EAAMC,GACvB,IAAQjB,EAA2BgB,EAA3BhB,GAAIkB,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,MAAO9D,EAAU2D,EAAV3D,MAEzB,OACE,+BACE,6BAAK4D,EAAM,IACX,6BAAKC,IACL,6BAAKC,IACL,6BAAK9D,IACL,+BACE,wBACEY,QAAS,kBAAM8C,EAASf,IACxB1C,UAAU,4CAFZ,SAGE,mBAAGA,UAAU,oBAEf,wBACEW,QAAS,kBAAM0C,EAAWX,IAC1B1C,UAAU,6CAFZ,SAGE,mBAAGA,UAAU,wBAEf,wBACEW,QAAS,kBAAM6C,EAAWd,IAC1B1C,UAAU,6CAFZ,SAGE,mBAAGA,UAAU,8BAnBV2D,WA+CT,sBAAK3D,UAAU,QAAf,qBACWD,YC7CF+D,EATE,WACf,OACE,gCACE,cAAC,EAAD,CAAUtB,MAAO,KACjB,cAAC,EAAD,QCFSuB,EAJE,WACf,OAAO,6CCDMC,G,MCKH,WACV,OACE,uBAAMC,KAAK,OAAOjE,UAAU,YAA5B,UACE,cAAC,EAAD,CAAYF,SAAU,EAAGC,MAAO,MAChC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmE,KAAK,IAAIC,UAAWL,EAAUM,OAAK,IAC1C,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWL,IACnC,cAAC,IAAD,CAAOI,KAAK,QAAQC,UAAWJ,YCZxBM,E,4MCGbC,MAAQ,CACNC,UAAU,G,uDAGZ,WACE3B,KAAK4B,SAAS,CACZD,UAAU,M,oBAId,WACE,OAAI3B,KAAK0B,MAAMC,SACN,cAAC,EAAD,IAGF3B,KAAKxB,MAAMqD,a,GAhBoB1B,aCJrB2B,E,iDACnB/C,KAAO,CACL,CACEe,GAAI,EACJrC,MAAO,iCACPC,OAAQ,kBACRC,MAAO,GACPC,WAAY,4FACd,CACEkC,GAAI,EACJrC,MAAO,cACPC,OAAQ,oBACRC,MAAO,GACPC,WAAY,6F,4CAGhB,WAAY,IAAD,OACT,OAAO,IAAImE,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTF,EAAQ,EAAKjD,QAEZ,Y,qBCrBHoD,EAAe,CACnBvC,MAAO,GACPK,SAAS,EACTC,MAAO,KACPK,UAAW,GAcXC,WAAY,KAoDC4B,EAjDC,WAAmC,IAAlCV,EAAiC,uDAAzBS,EAAcE,EAAW,uCAEhD,OAAQA,EAAOzD,MACb,IAAK,sBACH,OAAO,2BACF8C,GADL,IAEE9B,MAAO,GACPK,SAAS,EACTC,MAAO,OAGX,IAAK,sBACH,OAAO,2BACFwB,GADL,IAEE9B,MAAOyC,EAAOrD,QACdiB,SAAS,EACTC,MAAO,OAGX,IAAK,sBACH,OAAO,2BACFwB,GADL,IAEE9B,MAAO,GACPK,SAAS,EACTC,MAAOmC,EAAOrD,UAGlB,IAAK,qBACH,IAAMsD,EAASD,EAAOrD,QAChBzB,EAAOmE,EAAM9B,MAAM2C,MAAK,SAAChF,GAAD,OAAUA,EAAKuC,KAAOwC,KAC9CE,EAAU,CACd1C,GAAIvC,EAAKuC,GACTkB,KAAMzD,EAAKE,MACXwD,MAAO,EACP9D,MAAOI,EAAKI,OAEd,OAAO,2BACF+D,GADL,IAEEnB,UAAU,GAAD,mBACJmB,EAAMnB,WADF,CAEPiC,MAIN,QACE,OAAOd,IC5DEe,EAFDC,YAAYN,GCQpB3D,EAAmB,IAAIqD,EAE7Ba,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,UACE,cAACvE,EAAD,CAA0B2E,MAAOpE,EAAjC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRqE,SAASC,eAAe,W","file":"static/js/main.a9f43295.chunk.js","sourcesContent":["import ShopHeader from './shop-header';\r\n\r\nexport default ShopHeader;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './shop-header.css';\r\n\r\nconst ShopHeader = ({ numItems, total }) => {\r\n  return (\r\n    <header className=\"shop-header row\">\r\n      <Link to=\"/\">\r\n        <div className=\"logo text-dark\">ReStore</div>\r\n      </Link>\r\n      <Link to=\"/cart\">\r\n        <div className=\"shopping-cart\">\r\n          <i className=\"cart-icon fa fa-shopping-cart\" />\r\n          {numItems} items (${total})\r\n        </div>\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default ShopHeader;","import BookListItem from './book-list-item';\r\n\r\nexport default BookListItem;","import React from 'react';\r\n\r\nimport './book-list-item.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n  const { title, author, price, coverImage } = book;\r\n\r\n  return (\r\n    <div className=\"book-list-item\">\r\n      <div className=\"book-cover\">\r\n        <img src={coverImage} alt=\"Cover\" />\r\n      </div>\r\n      <div className=\"book-details\">\r\n        <span className=\"book-title\">{title}</span>\r\n        <div className=\"book-author\">{author}</div>\r\n        <div className=\"book-price\">${price}</div>\r\n        <button \r\n          onClick={onAddedToCart}\r\n          className=\"btn btn-info add-to-cart\">\r\n          Add to cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookListItem;","import React from 'react';\r\n\r\nconst {\r\n  Provider: BookstoreServiceProvider,\r\n  Consumer: BookstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  BookstoreServiceProvider,\r\n  BookstoreServiceConsumer\r\n};","import React from 'react';\r\n\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <BookstoreServiceConsumer>\r\n        {\r\n          (bookstoreService) => {\r\n            return (\r\n              <Wrapped {...props} bookstoreService={bookstoreService} />\r\n            );\r\n          }\r\n        }\r\n      </BookstoreServiceConsumer>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withBookstoreService;","const booksLoaded = (newBooks) => {\r\n  return {\r\n    type: 'FETCH_BOOKS_SUCCESS',\r\n    payload: newBooks\r\n  };\r\n};\r\n\r\nconst booksRequested = () => {\r\n  return {\r\n    type: 'FETCH_BOOKS_REQUEST'\r\n  };\r\n};\r\n\r\nconst booksError = (error) => {\r\n  return {\r\n    type: 'FETCH_BOOKS_FAILURE',\r\n    payload: error\r\n  };\r\n};\r\n\r\nexport const bookAddedToCart = (bookId) => {\r\n  return {\r\n    type: 'BOOK_ADDED_TO_CART',\r\n    payload: bookId\r\n  };\r\n};\r\n\r\nconst fetchBooks = (bookstoreService, dispatch) => () => {\r\n  dispatch(booksRequested());\r\n  bookstoreService.getBooks()\r\n    .then((data) => dispatch(booksLoaded(data)))\r\n    .catch((err) => dispatch(booksError(err)));\r\n};\r\n\r\nexport {\r\n  fetchBooks\r\n};","const compose = (...funcs) => (comp) => {\r\n  return funcs.reduceRight(\r\n    (prevResult, f) => f(prevResult), comp);\r\n};\r\n\r\nexport default compose;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return <div>Loading...</div>;\r\n};\r\n\r\nexport default Spinner;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div>Error!</div>;\r\n};\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport BookListItem from '../book-list-item';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withBookstoreService } from '../hoc';\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport { compose } from '../../utils';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nimport './book-list.css';\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n  return (\r\n    <ul className=\"book-list\">\r\n      {\r\n        books.map((book) => {\r\n          return (\r\n            <li key={book.id}>\r\n              <BookListItem \r\n                book={book} \r\n                onAddedToCart={() => onAddedToCart(book.id)} />\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n  );\r\n};\r\n\r\nclass BookListContainer extends Component {\r\n  componentDidMount() {\r\n    /* 1. receive data\r\n    const { bookstoreService } = this.props;\r\n    const data = bookstoreService.getBooks();\r\n    console.log(data);\r\n\r\n    2. dispatch action to store\r\n    this.props.booksLoaded(data); */\r\n\r\n    /* const {\r\n      bookstoreService, \r\n      booksLoaded, \r\n      booksRequested, \r\n      booksError } = this.props;\r\n    booksRequested();\r\n    bookstoreService.getBooks()\r\n      .then((data) => booksLoaded(data))\r\n      .catch((err) => booksError(err)); */\r\n\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  render() {\r\n    const { books, loading, error, onAddedToCart } = this.props;\r\n\r\n    if (loading) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    if (error) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return <BookList books={books} onAddedToCart={onAddedToCart} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ books, loading, error,  }) => {\r\n  return {\r\n    books,\r\n    loading,\r\n    error\r\n  };\r\n};\r\n\r\n/* const mapDispatchToProps = {\r\n  booksLoaded,\r\n  booksRequested,\r\n  booksError\r\n}; */\r\n\r\n/* const mapDispatchToProps = (dispatch, ownProps) => {\r\n  const { bookstoreService } = ownProps;\r\n\r\n  return {\r\n    fetchBooks: () => {\r\n      // console.log('Fetching books');\r\n      dispatch(booksRequested());\r\n      bookstoreService.getBooks()\r\n        .then((data) => dispatch(booksLoaded(data)))\r\n        .catch((err) => dispatch(booksError(err)))\r\n    }\r\n  };\r\n}; */\r\n\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n  return {\r\n    fetchBooks: fetchBooks(bookstoreService, dispatch),\r\n    onAddedToCart: (id) => dispatch(bookAddedToCart(id))\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  withBookstoreService(),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);","import BookList from './book-list';\r\n\r\nexport default BookList;","import ShoppingCartTable from './shopping-cart-table';\r\n\r\nexport default ShoppingCartTable;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './shopping-cart-table.css';\r\n\r\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\r\n  const renderRow = (item, idx) => {\r\n    const { id, name, count, total } = item;\r\n\r\n    return (\r\n      <tr key={idx}>\r\n        <td>{idx + 1}</td>\r\n        <td>{name}</td>\r\n        <td>{count}</td>\r\n        <td>{total}</td>\r\n        <td>\r\n          <button \r\n            onClick={() => onDelete(id)}\r\n            className=\"btn btn-outline-danger btn-sm float-right\">\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n          <button \r\n            onClick={() => onIncrease(id)}\r\n            className=\"btn btn-outline-success btn-sm float-right\">\r\n            <i className=\"fa fa-plus-circle\" />\r\n          </button>\r\n          <button \r\n            onClick={() => onDecrease(id)}\r\n            className=\"btn btn-outline-warning btn-sm float-right\">\r\n            <i className=\"fa fa-minus-circle\" />\r\n          </button>\r\n        </td>\r\n      </tr>                \r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"shopping-cart-table\">\r\n      <h2>Your Order</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Item</th>\r\n            <th>Count</th>\r\n            <th>Price</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {\r\n            items.map(renderRow)\r\n          }\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"total\">\r\n        Total: ${total}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ cartItems, orderTotal }) => { // (state)\r\n  return {\r\n    items: cartItems,\r\n    total: orderTotal\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    onIncrease: (id) => {\r\n      console.log(`onIncrease ${id}`);\r\n    },\r\n    onDecrease: (id) => {\r\n      console.log(`onDecrease ${id}`);\r\n    },\r\n    onDelete: (id) => {\r\n      console.log(`onDelete ${id}`);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);","import React from 'react';\r\nimport BookList from '../book-list';\r\nimport ShoppingCartTable from '../shopping-cart-table';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div>\r\n      <BookList books={[]} />\r\n      <ShoppingCartTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst CartPage = () => {\r\n  return <div>Cart Page</div>;\r\n};\r\n\r\nexport default CartPage;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ShopHeader from '../shop-header';\r\nimport { HomePage, CartPage } from '../pages';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <main role=\"main\" className=\"container\">\r\n      <ShopHeader numItems={5} total={210} />\r\n      <Switch>\r\n        <Route path=\"/\" component={HomePage} exact />\r\n        <Route path=\"/re-store\" component={HomePage} />\r\n        <Route path=\"/cart\" component={CartPage} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\n\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}","export default class BookstoreService {\r\n  data = [\r\n    {\r\n      id: 1,\r\n      title: 'Production-Ready Microservices',\r\n      author: 'Susan J. Fowler',\r\n      price: 32,\r\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg'},\r\n    {\r\n      id: 2,\r\n      title: 'Release It!',\r\n      author: 'Michael T. Nygard',\r\n      price: 45,\r\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'}\r\n  ];\r\n\r\n  getBooks() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve(this.data);\r\n        // reject(new Error('Something bad happened'));\r\n      }, 700);\r\n    });\r\n  }\r\n}","const initialState = {\r\n  books: [],\r\n  loading: true,\r\n  error: null,\r\n  cartItems: [\r\n    /*{\r\n      id: 1,\r\n      name: 'Book 1',\r\n      count: 2,\r\n      total: 200\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Book 2',\r\n      count: 3,\r\n      total: 150\r\n    }*/\r\n  ], \r\n  orderTotal: 350\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  // console.log(action.type);\r\n  switch (action.type) {\r\n    case 'FETCH_BOOKS_REQUEST':\r\n      return {\r\n        ...state,\r\n        books: [],\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_BOOKS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        books: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_BOOKS_FAILURE':\r\n      return {\r\n        ...state,\r\n        books: [],\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case 'BOOK_ADDED_TO_CART':\r\n      const bookId = action.payload;\r\n      const book = state.books.find((book) => book.id === bookId);\r\n      const newItem = {\r\n        id: book.id,\r\n        name: book.title,\r\n        count: 1,\r\n        total: book.price\r\n      };\r\n      return {\r\n        ...state,\r\n        cartItems: [\r\n          ...state.cartItems,\r\n          newItem\r\n        ]\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/app';\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport BookstoreService from './services/bookstore-service';\r\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\r\n\r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundry>\r\n      <BookstoreServiceProvider value={bookstoreService}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </BookstoreServiceProvider>\r\n    </ErrorBoundry>\r\n  </Provider>,\r\n  document.getElementById('root'));"],"sourceRoot":""}